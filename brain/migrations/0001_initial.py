# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-08-17 17:02
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import localflavor.us.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccountInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ixluser', models.CharField(blank=True, max_length=200, verbose_name='IXL Username')),
                ('ixlpass', models.CharField(blank=True, max_length=200, verbose_name='IXL Password')),
                ('kidsazteacher', models.CharField(blank=True, max_length=200, verbose_name='Kids A-Z Teacher')),
                ('kidsazuser', models.CharField(blank=True, max_length=200, verbose_name='Kids A-Z Username')),
                ('kidsazpass', models.CharField(blank=True, max_length=200, verbose_name='Kids A-Z Password')),
                ('myonuser', models.CharField(blank=True, max_length=200, verbose_name='myON Username')),
                ('myonpass', models.CharField(blank=True, max_length=200, verbose_name='myON Password')),
                ('readworkscode', models.CharField(blank=True, max_length=50, verbose_name='Readworks Class Code')),
                ('enrichmentreadworkscode', models.CharField(blank=True, help_text='Only for students in Enrichment', max_length=50, verbose_name='Enrichment Readworks Class Code')),
            ],
            options={
                'verbose_name': 'Account Information',
                'verbose_name_plural': 'Account Information',
            },
        ),
        migrations.CreateModel(
            name='BehaviorReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('Absent', 'Absent')], default='3', max_length=50, verbose_name='Number of Sticks')),
            ],
            options={
                'verbose_name': 'Behavior Report',
                'verbose_name_plural': 'Behavior Reports',
                'ordering': ['school_day'],
            },
        ),
        migrations.CreateModel(
            name='CommonCoreStateStandard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(choices=[('K', 'Kindergarten'), ('1st', '1st Grade'), ('2nd', '2nd Grade'), ('3rd', '3rd Grade'), ('4th', '4th Grade'), ('5th', '5th Grade'), ('6th', '6th Grade'), ('7th', '7th Grade'), ('8th', '8th Grade')], default='2nd', max_length=50)),
                ('domain', models.CharField(default='Reading', max_length=50)),
                ('subdomain', models.CharField(blank=True, max_length=100)),
                ('topic', models.CharField(default='Key Ideas and Details', max_length=100)),
                ('code', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^CCSS\\.(.*)$', 'Pattern must match IXL format: D-A.12')], verbose_name='CCSS Code')),
                ('description', models.CharField(max_length=1000)),
            ],
            options={
                'verbose_name': 'Common Core Standard',
                'verbose_name_plural': 'Common Core Standards',
            },
        ),
        migrations.CreateModel(
            name='CurrentClass',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('year', models.CharField(choices=[('14-15', '14-15'), ('15-16', '15-16'), ('16-17', '16-17'), ('17-18', '17-18'), ('18-19', '18-19'), ('19-20', '19-20'), ('20-21', '20-21'), ('21-22', '21-22')], max_length=100)),
                ('grade', models.CharField(choices=[('K', 'Kindergarten'), ('1st', '1st Grade'), ('2nd', '2nd Grade'), ('3rd', '3rd Grade'), ('4th', '4th Grade'), ('5th', '5th Grade'), ('6th', '6th Grade'), ('7th', '7th Grade'), ('8th', '8th Grade')], default='2nd', max_length=50)),
            ],
            options={
                'verbose_name': 'Class',
                'verbose_name_plural': 'Classes',
                'ordering': ['year', 'grade', 'teacher'],
            },
        ),
        migrations.CreateModel(
            name='DataUpdate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateandtime', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['-dateandtime'],
            },
        ),
        migrations.CreateModel(
            name='HomeworkCompletion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('COMPLETE', 'Complete'), ('INCOMPLETE', 'Incomplete'), ('NOT RECEIVED', 'Not Received'), ('LATE', 'Late')], default='NOT RECEIVED', max_length=50, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Homework Status',
                'verbose_name_plural': 'Homework Statuses',
                'ordering': ['school_day'],
            },
        ),
        migrations.CreateModel(
            name='MorningMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Date of Message')),
                ('message', models.TextField(default='')),
            ],
            options={
                'verbose_name': 'Morning Message',
                'verbose_name_plural': 'Morning Messages',
            },
        ),
        migrations.CreateModel(
            name='MorningMessageSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('greeting', models.CharField(default='Good Morning, Scholars!', max_length=100, verbose_name='Greeting')),
                ('specialsmonday', models.CharField(default='Spanish and Art', max_length=255, verbose_name='Monday Specials')),
                ('specialstuesday', models.CharField(default='Spanish and Art', max_length=255, verbose_name='Tuesday Specials')),
                ('specialswednesday', models.CharField(default='Spanish and Art', max_length=255, verbose_name='Wednesday Specials')),
                ('specialsthursday', models.CharField(default='Spanish and Art', max_length=255, verbose_name='Thursday Specials')),
                ('specialsfriday', models.CharField(default='Spanish and Art', max_length=255, verbose_name='Friday Specials')),
                ('box1heading', models.CharField(default='Library Students', help_text='Heading for the box at the top right. It can be used for anything and can have different information depending on the day of the week. I use mine to remind students to change out library books.', max_length=255, verbose_name='Side Box Heading')),
                ('box1monday', models.CharField(default='Noel, Travis, Aniya, Zaire', max_length=255, verbose_name='Box Content: Mon')),
                ('box1tuesday', models.CharField(default='Noel, Travis, Aniya, Zaire', max_length=255, verbose_name='Box Content: Tue')),
                ('box1wednesday', models.CharField(default='Noel, Travis, Aniya, Zaire', max_length=255, verbose_name='Box Content: Wed')),
                ('box1thursday', models.CharField(default='Noel, Travis, Aniya, Zaire', max_length=255, verbose_name='Box Content: Thu')),
                ('box1friday', models.CharField(default='Noel, Travis, Aniya, Zaire', max_length=255, verbose_name='Box Content: Fri')),
                ('endingcomment', models.CharField(default="Let's have a fantastic day!", max_length=255, verbose_name='Last Thought')),
                ('signoffword', models.CharField(default='Love,', help_text='Love, Sincerely, etc.', max_length=100, verbose_name='Salutation')),
                ('signoffteacher', models.CharField(default='Mr. Trost and Ms. West', max_length=255, verbose_name='Signature')),
                ('moodmeter', models.BooleanField(default=True, help_text='If you want a Mood Meter reminder to appear on your Morning Message Screen', verbose_name='Mood Meter')),
                ('weather', models.BooleanField(default=True, help_text='If you want a local weather box to appear on your Morning Message Screen', verbose_name='Weather')),
            ],
            options={
                'verbose_name': 'Morning Message Settings',
                'verbose_name_plural': 'Morning Message Settings',
            },
        ),
        migrations.CreateModel(
            name='ReadingStats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('starting_lexile', models.IntegerField(blank=True, null=True, verbose_name='Starting Lexile')),
                ('current_lexile', models.IntegerField(blank=True, null=True, verbose_name='Current Lexile')),
                ('goal_lexile', models.IntegerField(blank=True, null=True, verbose_name='Goal Lexile')),
                ('lexile_progress', models.IntegerField(blank=True, null=True, verbose_name='Lexile Progress')),
                ('myon_tests_taken', models.IntegerField(blank=True, null=True, verbose_name='myON Tests Taken')),
                ('starting_dra', models.CharField(blank=True, max_length=10, verbose_name='Starting DRA')),
                ('current_dra', models.CharField(blank=True, max_length=10, verbose_name='Current DRA')),
                ('goal_dra', models.CharField(blank=True, max_length=10, verbose_name='Goal DRA')),
                ('myon_time_spent', models.IntegerField(blank=True, null=True, verbose_name='myON Time Spent')),
                ('myon_books_finished', models.IntegerField(blank=True, null=True, verbose_name='myON Books Finished')),
                ('myon_books_opened', models.IntegerField(blank=True, null=True, verbose_name='myON Books Opened')),
            ],
            options={
                'verbose_name': 'Reading Statistic',
                'verbose_name_plural': 'Reading Statistics',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('MONDAY', 'Monday'), ('TUESDAY', 'Tuesday'), ('WEDNESDAY', 'Wednesday'), ('THURSDAY', 'Thursday'), ('FRIDAY', 'Friday')], max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Booker T. Washington Academy', max_length=255)),
                ('state', localflavor.us.models.USStateField(default='CT', max_length=2)),
                ('zip', localflavor.us.models.USZipCodeField(blank=True, default='06511', max_length=10)),
                ('grade_pre', models.BooleanField(default=False, verbose_name='Pre-School')),
                ('grade_ele', models.BooleanField(default=False, verbose_name='Elementary School')),
                ('grade_mid', models.BooleanField(default=False, verbose_name='Middle School')),
                ('grade_hig', models.BooleanField(default=False, verbose_name='High School')),
                ('logo', models.ImageField(blank=True, upload_to='', verbose_name='School Logo')),
            ],
            options={
                'verbose_name': 'School',
                'verbose_name_plural': 'Schools',
            },
        ),
        migrations.CreateModel(
            name='SchoolDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.DateField()),
                ('halfday', models.BooleanField(default=False, verbose_name='Half Day')),
                ('noschool', models.BooleanField(default=False, verbose_name='No School')),
            ],
            options={
                'ordering': ['day'],
            },
        ),
        migrations.CreateModel(
            name='StudentRoster',
            fields=[
                ('student_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('date_of_birth', models.DateField(blank=True)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default='M', max_length=50)),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Parent Email')),
                ('email2', models.EmailField(blank=True, max_length=254, verbose_name='Second Parent Email')),
                ('current_class', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='brain.CurrentClass')),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
                'ordering': ['current_class', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Subject')),
            ],
        ),
        migrations.CreateModel(
            name='SubjectUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.CharField(choices=[('K', 'Kindergarten'), ('1st', '1st Grade'), ('2nd', '2nd Grade'), ('3rd', '3rd Grade'), ('4th', '4th Grade'), ('5th', '5th Grade'), ('6th', '6th Grade'), ('7th', '7th Grade'), ('8th', '8th Grade')], default='2nd', max_length=50)),
                ('number', models.SmallIntegerField(verbose_name='Unit Number')),
                ('title', models.CharField(max_length=400, verbose_name='Unit Title')),
                ('datestarted', models.DateField()),
                ('message', models.TextField(blank=True, verbose_name='Message for Parents About Unit')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brain.Subject', verbose_name='Subject')),
            ],
            options={
                'verbose_name': 'Subject Unit',
                'verbose_name_plural': 'Subject Units',
                'ordering': ['grade', 'subject', 'number'],
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(choices=[('Ms.', 'Ms.'), ('Mrs.', 'Mrs.'), ('Mr.', 'Mr.'), ('Dr.', 'Dr.')], default='Ms.', max_length=50)),
                ('first_name', models.CharField(max_length=50, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=50, verbose_name='Last Name')),
                ('email', models.EmailField(blank=True, help_text='FirstLastBTWA@gmail.com', max_length=100, verbose_name='BTWA Email')),
                ('remindURL', models.CharField(blank=True, help_text='remind.com/join/______', max_length=50, verbose_name='Remind.com Signup name')),
                ('workphone', models.CharField(blank=True, max_length=50, verbose_name='Work Phone')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brain.School')),
            ],
            options={
                'verbose_name': 'Teacher',
                'verbose_name_plural': 'Teachers',
                'ordering': ['last_name'],
            },
        ),
        migrations.CreateModel(
            name='WeeklyWord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=50, unique=True)),
                ('keytosuccess', models.BooleanField(default=False, help_text='Is this a Key to Success? If RULER word, leave unchecked.', verbose_name='Key To Success')),
                ('quadrant', models.CharField(blank=True, choices=[('Green', 'Green'), ('Yellow', 'Yellow'), ('Blue', 'Blue'), ('Red', 'Red')], max_length=50, verbose_name='Mood Meter Quadrant')),
                ('date_taught', models.DateField(verbose_name='Date Taught')),
            ],
            options={
                'verbose_name': 'Weekly Word',
                'verbose_name_plural': 'Weekly Words',
                'ordering': ['date_taught'],
            },
        ),
        migrations.AddField(
            model_name='schedule',
            name='subject1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject1', to='brain.Subject', verbose_name='First Class'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='subject2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject2', to='brain.Subject', verbose_name='Second Class'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='subject3',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject3', to='brain.Subject', verbose_name='Third Class'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='subject4',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject4', to='brain.Subject', verbose_name='Fourth Class'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='subject5',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject5', to='brain.Subject', verbose_name='Fifth Class'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='subject6',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject6', to='brain.Subject', verbose_name='Sixth Class'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='subject7',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject7', to='brain.Subject', verbose_name='Seventh Class'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brain.Teacher'),
        ),
        migrations.AddField(
            model_name='readingstats',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brain.StudentRoster'),
        ),
        migrations.AddField(
            model_name='morningmessagesettings',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brain.Teacher'),
        ),
        migrations.AddField(
            model_name='morningmessage',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brain.Teacher'),
        ),
        migrations.AddField(
            model_name='homeworkcompletion',
            name='school_day',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brain.SchoolDay', verbose_name='Date'),
        ),
        migrations.AddField(
            model_name='homeworkcompletion',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brain.StudentRoster', verbose_name='Student'),
        ),
        migrations.AddField(
            model_name='currentclass',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='brain.Teacher'),
        ),
        migrations.AddField(
            model_name='behaviorreport',
            name='school_day',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brain.SchoolDay', verbose_name='Date'),
        ),
        migrations.AddField(
            model_name='behaviorreport',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brain.StudentRoster', verbose_name='Student'),
        ),
        migrations.AddField(
            model_name='accountinfo',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brain.StudentRoster'),
        ),
    ]
